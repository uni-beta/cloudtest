[2020-04-06 v1.7.0]
1. Refined runtime classloader management and integration
2. Improved performance
3. Refined 'foreach' to support array[] type
4. Released v1.7.0

[2019-07-13 v1.6.1]
1. Fixed the parallel job process blocking issue when tasks count is less than servers count.
2. Implemented runtime variables configuration via plugin. Name rules: much be starts and ends with '$', for example: 
	<plugin id="$tools$" desc="external common tools">
		<className>com.unibeta.cloudtest.config.plugin.tools.CommonTools</className>
	</plugin>
    '$tools$' can be used in runtime scripts anywhere.eg: '$tools$.process(x)';
3. Enhanced case fileName to indicate caseId with '@[,,]', for example:
   'TestCase/mytest/test1.tc.xml@[case1,case2,case3];TestCase/mytest/test2.tc.xml@[case11,case21,case31];'
4. Refined mail sending timeout logic.
5. Released v1.6.1

[2019-04-23 v1.6.0]
1. Enhanced com.unibeta.cloudtest.parallel.ParallelJob for api remote address injection.  
	run(String callType,
			Map<String, String> servers, String caseUris, String mail,
			boolean needRollbackHomePath)
	run(String callType,
			Map<String, String> servers, String cloudtestHome, String caseUri,
			String mail, boolean needRollbackHomePath)
2. Enhanced inner case dependence function.
3. Refined caseId index logic with eachId indicator.
4. Fixed few bugs, such as hotspots report wording and thread safety issues.
5. cache engine is configurable with 'cloudtest.system.cache_type'. 'ehcache' for ehcache, others using local context.
6. Released v1.6.0
		
[2018-08-03 v1.5.0]
1. Added 'eachId' configuration function for 'foreach'.
2. Added 'group' attribute to 'testCase' for grouping.
3. Comparison supported for test report html. 
	a.blue as new added, 
	b.green as new success, 
	c.red as new failed. 
4. Hotspots report supported. Analyze the recent most failed cases with sampling rate.
	a. 'cloudtest.report.hotspots.sampling_rate' for sampling rate in PluginConfig.xml, sampling amount is below:
		(history.index.maximum * hotspots.sampling_rate)
	b. hotspots means aggregating the most failed cases together with given sampling rate.
5. Upgrade jdk to 1.6
6. A major upgrade version for some bug fixing and optimization.
7. Released v1.5.0

[2017-11-23 v1.4.3]
1. Enhanced depends function for 'foreach'.
2. Released v1.4.3

[2017-08-07 v1.4.2]
1. Fixed a restful bug
2. Released v1.4.2

[2017-06-13 v1.4.1]
1. Refined assertion logic
2. Refined the email subject for parallel job
3. Released v1.4.1

[2017-03-24 v1.4.0]
1. Added 'posts' function in case execution as post processing.
2. Enhanced parallel jobs concurrent safety guarantee for different users. 
3. Added 'foreach' to build multiple cases with simple configuration.
3. Released V1.4.0

[2017-01-16 v1.3.3]
1. Added cloudtest.parallel.mapred.task.block.type parameter, Map/Reduce strategy of task block type: 'folder' or 'file', by default is 'folder'.
2. Refined case name format in report.
3. Released V1.3.3

[2016-11-16 v1.3.2]
1. Change root element name from cloudTestCase to cloudtest in case xml file.
2. Refined ranking calculation logic.
3. Add 'group' definition for report grouping 
4. Released V1.3.2

[2016-08-08 v1.3.1]
1. Added case recorder function with below configuration:
	<case-recorders>
		<recorder id="example" poweroff="false" targetCaseFilePath="example.tc.xml"
			desc="">
			<signatureRegex>
				<className>.*</className>
				<modifiers>.*</modifiers>
				<methodName>.*</methodName>
			</signatureRegex>
		</recorder>
	</case-recorders>
2. Fixed tasks' assignment duplicated issue
3. Refined auto assert logic in recorder function
4. Fixed some other bugs.
5. Released v1.3.1

[2016-05-10 v1.3.0]
1. Enhanced the XML date digester tool for generic type in list.
2. Report folder name can be separated between load test and others. com.unibeta.cloudtest.tool.CloudTestReportor.report(String, CloudLoadInput, String)
3. Added HighCharts report engine.
4. Groovy engine is supported. by default it still use beanshell.
5. Enabled RESTfull interface invoking.
6. webservice endpoint is configurable in servlet cofig with init-param "WEBSERVICE_ENDPOINT_URI"
7. Released v1.3.0

[2016-01-21 v1.2.9]
1. Do some refines.
2. Released v1.2.9

[2015-09-05 v1.2.8]
1. Optimized dynamic class loading performance from java file.
2. Fixed the run time calculation bug for static method
3. Refined ObjectDigester.fromJavaFile implementation.
4. Fixed the index.xml loading issue.
5. Refined assertion logic.
6. Released v1.2.8. 

[2015-03-16 v1.2.7]
1. Enhanced pre-compile for assertion.
2. Released v1.2.7.

[2015-01-26 v1.2.6]
1. Fixed concurrent assertion thread-safe issue.
2. Enabled ehcache as the default cache management.
3. Added result trend chart report.
4. Released v1.2.6.

[2014-12-25 v1.2.5]
1. Refined the report style.
2. Fixed some bugs.
3. Released v1.2.5.

[2014-12-04 v1.2.4]
1. Refined concurrence thread-safety mechanism.
2. Fixed some bugs.
3. Refined the default report style.
4. Release V1.2.4

[2014-10-23 v1.2.3]
1. Added history report index
2. Refined test report in email
3. Release v1.2.3

[2014-09-21 v1.2.2]
1. Added 'ignore' and 'depends'in case file layer. e.g, <cloudTestCase ignore = "1==1" depends = ""/>
2. Fixed some bugs
3. Enabled 'className' can support xml expression for instance building. e.g,<string>string test</string> in className field can be supported.
4. Release v1.2.2

[2014-08-15 v1.2.1]
1. Refined report format.
2. Enabled 'ignore' support java expression. For example, ignore = "1!=8" or "1>1 @and 1>0" it will be parsed as ignore ="false". 
3. Fixed some bugs.
4. Release v1.2.1

[2014-06-28 v1.2.0]
1. ParallelJob added for distribution computing via slave server note.refer to com.unibeta.cloudtest.parallel.ParallelJob.run(String, String).
	slave site can be configured in PluginConfig.xml via below example
	<slave-servers>
       <!-- <server id="slave-server1" address="http://localhost1:8080/unibeta/services/CloudTestServices" desc=""/>-->
       <!-- <server id="slave-server2" address="http://localhost2:8080/unibeta/services/CloudTestServices" desc=""/>-->
    </slave-servers>
2. Fixed some bugs.
3. Release v1.2.0

[2013-12-11 v1.1.0]
1. Refined report logic.
2. Fixed some bugs.

[2013-10-11 v1.0.9]
1. Refined some codes structure
2. Refined mail config property name as below:
	<param name="cloudtest.mail.Host" value="mail.company.com"/>
	<param name="cloudtest.mail.UserAddress" value="xxx@company.com"/>
	<param name="cloudtest.mail.Username" value="xxx"/>
	<param name="cloudtest.mail.UserPassword" value="@#XX"/>
	<param name="cloudtest.mail.Pop3Host" value="pop.company.com"/>
	<param name="cloudtest.mail.Pop3Port" value="995"/>
	<param name="cloudtest.mail.StoreProtocal" value="pop3s"/>
3. Refined StackOverflowError's protection solution.
4. Refined mail manager and report sorting logic.

[2013-08-20 v1.0.8]
1. Refined xml data digester tool for mock up xml data creating.
2. Refined dependent case failed exception handling.
3. ObjectDigester can create object instance from java source file via ObjectDigester.fromJavaFile() method.

[2013-06-18 v1.0.7]
1. Fixed XML data digester's bug.
2. Added fromJava method to ObjectDigester as cloud object builder.
3. Basic java type can be configurable in com/unibeta/cloudtest/constant/JavaBasicTypeList.xml

[2013-05-30 v1.0.7]
1. Refined  context dependence in single test case payload file.
2. Fixed java's array data type digester bug.

[2013-05-17 v1.0.7]
1. Upgraded vRules4j to V3.1.2 
2. Add 'ignore' attribute to indicate whether execute or not
3. Fixed primitive data type assertion always return null's issue

[2013-04-27 v1.0.6]
1. Fixed a bug

[2013-04-15 v1.0.6]
1. Fixed few bugs

[2013-04-11]
1. External imports supported.
	¡®imports¡® attribute under cloudTestCase can import external case file to current runtime life-cycle.
		1£®¡®./¡¯ stands for current folder
		2£®¡®../¡¯stands for parent folder
		3£®¡®../../¡¯ stands for parent¡¯s parent folder, just as Linux file operation command 
		4£®Multiple case files can be split by ¡®,¡¯ or ¡®;¡¯
	e.g,
	<cloudTestCase assertRuleFile="DataTypeTest.assert.xml" imports="./DataTypeTest1.tc.xml,../DataTypeTest2.tc.xml">

[2013-04-02 v1.0.5]
1. Extended case runner plugin interface, it can be customized and pluggable in PluginConfig.xml
2. Integrated JUnit case runner by default.

[2013-03-01 v1.0.4]
1. Dependence case runtime supported. attribute 'depends' refer to case id, can be linked by ',' for multiple dependences.  

[2013-02-23 v1.0.4]
1. Performance assertion supported. Added timeout in assertion object. e.g
	<assertion>
            <timeout>-1.0</timeout>
            <assert>longResult != 0</assert>
            <message>DataTypeTest_test asserted failure</message>
    </assertion>

[2013-02-04 v1.0.3]
1. Inner class mock data supported.
2. Fix some bugs

[2013-02-02 v1.0.3]
1. Multiple array data type supported.
2. Refined data type expression, Canonical name is supported, 
	e.g, int[][], java.lang.String[][][]
 
[2013-01-26 v1.0.2]
1.Refined assertion function. 
	a.Change 'assert' to 'assertion' as xml element
	b.Add 'message' under 'assertion' as error message.
	e.g:
		<assertion>
            <assert>StringResult != null</assert>
            <message>DataTypeTest_test asserted failure.\nReturned result is:\n#{new com.thoughtworks.xstream.XStream().toXML(StringResult)}\n.</message>
        </assertion>
2.Upgraded vRules4j to v3.1.1

[2013-01-12 v1.0.1]
1.Fixed some bugs
2.Refined default report engine
3.Junit report supported