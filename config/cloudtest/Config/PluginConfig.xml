<!-- PluginConfig.xml is configuration center of cloud test framework. param 
	name is insensitive to the letter. e.g, 'AbC' equals to 'abc'. -->
<pluginConfig>
	<plugin
		id="com.unibeta.cloudtest.config.plugin.elements.ParamConfigServicePlugin"
		desc="Global param configuration service plugin">
		<className>com.unibeta.cloudtest.config.plugin.elements.impl.ParamConfigServicePluginImpl
		</className>
	</plugin>
	<plugin
		id="com.unibeta.cloudtest.config.plugin.elements.SpringBeanFactoryPlugin"
		desc="Spring bean factory plugin">
		<className>com.unibeta.cloudtest.config.plugin.elements.impl.SpringBeanFactoryPluginImpl
		</className>
	</plugin>
	<plugin
		id="com.unibeta.cloudtest.config.plugin.elements.UserTransactionPlugin"
		desc="User transaction plugin">
		<className>com.unibeta.cloudtest.config.plugin.elements.impl.UserTransactionPluginImpl
		</className>
	</plugin>
	<plugin
		id="com.unibeta.cloudtest.config.plugin.elements.ReportGeneratorPlugin"
		desc="Report generator">
		<className>com.unibeta.cloudtest.config.plugin.elements.impl.ReportGeneratorPluginImpl
		</className>
	</plugin>
	<plugin id="com.unibeta.cloudtest.config.plugin.elements.CaseRunnerPlugin"
		desc="Case runner invoker">
		<className>com.unibeta.cloudtest.config.plugin.elements.impl.JUnitCaseRunnerPluginImpl
		</className>
	</plugin>

	<!-- cloud test script engine setting, options value are 'beanshell' and 
		'groovy'. by default, it is 'beanshell'. -->
	<param name="cloudtest.script.engine" value="beanshell"/>

	<!-- the endpoint address' format is like below "http://localhost:80/myapp/services/CloudTestServices" 
		By default, If it is empty, the endpoint is "http://localhost:[port]/[webapp-context-name]/[webservice-sevlet-name]/CloudTestServices". 
		if set it as "null" or "none", system will not publish the web service automatically. 
		In this case you can use other methods to deploy the web service. -->
	<param name="cloudtest.WebService.EndpointAddress" value=""/>
	<param name="cloudtest.UserTransaction.JNDI" value="java:comp/UserTransaction"/>
	<param name="cloudtest.AutomationTest.SwitchFlag" value="true"/>
	<param name="cloudtest.AutomationTest.IntervalHours" value="6"/>

	<param name="cloudtest.mail.Host" value="mail.company.com"/>
	<param name="cloudtest.mail.UserAddress" value="xxx@company.com"/>
	<param name="cloudtest.mail.Username" value="xxx"/>
	<param name="cloudtest.mail.UserPassword" value="@#XX"/>
	<param name="cloudtest.mail.Pop3Host" value="pop.company.com"/>
	<param name="cloudtest.mail.Pop3Port" value="995"/>
	<param name="cloudtest.mail.StoreProtocal" value="pop3s"/>
	<param name="cloudtest.mail.smtp.auth" value="false"/>
	<param name="cloudtest.mail.smtp.connectiontimeout" value="60000" />
    <param name="cloudtest.mail.smtp.timeout" value="60000" />
    <param name="cloudtest.mail.smtp.writetimeout" value="60000" />
	
	<param name="cloudtest.mailservice.enabled" value="false"/>
	<param name="cloudtest.mailservice.DeployedServerName" value="computer name"/>
	<param name="cloudtest.mailservice.criteria.subject_prefix" value="[cloudtest]"/>
	<!-- post operation flag options:ANSWERED, DELETED, SEEN  -->
	<param name="cloudtest.mailservice.operation.post_flag" value="ANSWERED"/>
	<param name="cloudtest.mailservice.refresh.interval_seconds" value="30"/>
	<param name="cloudtest.mailservice.template.path_on_failed" value="Config/response_template_on_failed.txt"/>
	
	<param name="cloudtest.loadtest.MaxDetailedResponseAmount" value="100000"/>

	<!--Aggregator Type: className or casePath, by default is className -->
	<param name="cloudtest.report.aggregator.type" value="casePath"/>
	<param name="cloudtest.interface.impls.SearchingIndex" value="3"/>
	<!--Trend report engine setting options: 'highcharts' and 'jfreechart', 
		by default is 'highcharts' -->
	<param name="cloudtest.report.engine" value="highcharts"/>
	<!--jfreechart style setting options: 'LineChart' and 'LineChart3D', by 
		default is 'LineChart3D' -->
	<param name="cloudtest.report.engine.jfreechart.chart" value="LineChart3D"/>
	<!--if the history amount is larger than maximum, cloudtest will remove 
		oldest report file -->
	<param name="cloudtest.report.history.index.maximum" value="1000"/>
	<!-- sampling_rate for hotspots report, decimal value is required. 
	 set as 0.0 to disable hotspots function. By default it is 1.0 
	 sampling amount is: (history.index.maximum * hotspots.sampling_rate)-->
	<param name="cloudtest.report.hotspots.sampling_rate" value="1.0"/>
	<param name="cloudtest.report.junit.xml.dir" value=""/>

	<!--cloudtest.parallel.rpc.type: 'webservice' or 'restful', by default is 
		'webservice' -->
	<param name="cloudtest.parallel.rpc.type" value="webservice"/>
	<!--cloudtest.parallel.distribution.mode: 'parallel' or 'linked' -->
	<param name="cloudtest.parallel.distribution.mode" value="linked"/>
	<param name="cloudtest.parallel.remote.net.timeout" value="10000"/>
	<param name="cloudtest.parallel.remote.service.connection_timeout"
		value="600000"/>
	<param name="cloudtest.parallel.remote.service.receive_timeout"
		value="600000"/>
	<!--Map/Reduce strategy of task block type: 'folder' or 'file', by default is 'folder'-->
	<param name="cloudtest.parallel.mapred.task.block.type" value="folder"/>
	<!--max data package size for remote cases uploading, by default is 1024KB(1M) -->
	<param name="cloudtest.parallel.remote.upload.data.package.max_size" value="1024"/>
	<!--cloudtest servlet context uri for remote cases uploading, for example '/restful/cloudtest/upload', by default is empty -->
	<param name="cloudtest.parallel.remote.upload.service.endpoint" value=""/>
	<!-- authorization token for slave-nodes accessing-->
	<param name="cloudtest.parallel.auth.token" value=""/>
	
	<param name="cloudtest.assert.pre_compile.enable" value="true"/>
	
	<param name="cloudtest.recorder.case.ignore_duplicated.enable" value="false"/>
	<param name="cloudtest.recorder.case.remove_duplicated.enable" value="false"/>
	<!--system cache engine configuration, 'ehcache' or 'cloudcontext', by default using 'cloudcontext' -->
	<param name="cloudtest.system.cache_type" value="ehcache"/>

	<slave-servers>
		<!-- <server id="slave-server1" address="http://localhost1:8080/unibeta/webservice/cloudtest" 
			type = "webservice" desc=""/> -->
		<!-- <server id="slave-server2" address="http://localhost2:8080/unibeta/restful/cloudtest" 
			type = "restful" desc=""/> -->
	</slave-servers>
	<case-recorders>
		<recorder id="example" poweroff="false" targetCaseFilePath="example.tc.xml"
			desc="">
			<signatureRegex>
				<className>.*</className>
				<modifiers>.*</modifiers>
				<methodName>.*</methodName>
			</signatureRegex>
		</recorder>
	</case-recorders>
</pluginConfig>